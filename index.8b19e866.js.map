{"mappings":"C,A,W,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,I,E,E,Q,C,E,Q,S,C,C,C,E,I,E,E,S,E,E,S,E,E,S,E,E,SCOM,EAAA,WAAA,EAAN,WAAM,SAAA,EACQ,CAAY,EADpB,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAA,IAAA,CAAA,GAEF,IAAI,CAAC,YAAY,CAAG,EAChB,EAAa,GAAG,CAAC,SAAC,CADtB,EAC6B,MAAA,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAG,EAC5B,GAAA,MAAM,IAAI,CAAC,CAAE,OAAQ,CAAE,EAAG,WAAM,MAAA,MAAM,CAAG,IAAI,CAAC,E,GAElD,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,EAC1C,IAAI,CAAC,KAAK,CAAG,EACb,IAAI,CAAC,MAAM,CAAG,OACd,IAAI,CAAC,OAAO,CAAG,CAAA,C,CATb,MAAA,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAA,EAAA,C,CAeJ,IAAA,SAAA,MAAA,SAAO,CAAK,EACV,OAAO,EAAM,GAAG,CAAC,SAAC,CAAlB,EAAyB,MAAA,AAAA,CAAA,EAAA,EAAA,CAAA,AAAA,EAAG,E,EAC9B,C,E,CAEA,IAAA,iBAAA,MAAA,WAGE,IAAK,IAFC,EAAQ,EAAE,CAEP,EAAI,EAAG,EAAI,EAAG,IACrB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAG,IACI,IAArB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAClB,EAAM,IAAI,CAAC,CAAC,EAAG,EAAE,EAKvB,OAAO,CACT,C,E,CAEA,IAAA,iBAAA,MAAA,WACE,IAA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","sources":["<anon>","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js"],"sourcesContent":["(function () {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire4cc0\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire4cc0\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"5fy9m\", function(module, exports) {\n\nvar $bB0zn = parcelRequire(\"bB0zn\");\n\nvar $6QEWP = parcelRequire(\"6QEWP\");\n\nvar $kB67t = parcelRequire(\"kB67t\");\n\nvar $2Xzd1 = parcelRequire(\"2Xzd1\");\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ var $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game(initialState) {\n        (0, $bB0zn._)(this, Game);\n        this.initialState = initialState ? initialState.map(function(r) {\n            return (0, $2Xzd1._)(r);\n        }) : Array.from({\n            length: 4\n        }, function() {\n            return Array(4).fill(0);\n        });\n        this.state = this._clone(this.initialState);\n        this.score = 0;\n        this.status = \"idle\";\n        this.started = false;\n    }\n    (0, $6QEWP._)(Game, [\n        {\n            // =====================\n            // 🔹 Вспомогательные методы\n            // =====================\n            key: \"_clone\",\n            value: function _clone(state) {\n                return state.map(function(r) {\n                    return (0, $2Xzd1._)(r);\n                });\n            }\n        },\n        {\n            key: \"_getEmptyCells\",\n            value: function _getEmptyCells() {\n                var empty = [];\n                for(var r = 0; r < 4; r++){\n                    for(var c = 0; c < 4; c++)if (this.state[r][c] === 0) empty.push([\n                        r,\n                        c\n                    ]);\n                }\n                return empty;\n            }\n        },\n        {\n            key: \"_addRandomCell\",\n            value: function _addRandomCell() {\n                var empty = this._getEmptyCells();\n                if (!empty.length) return;\n                var _empty_Math_floor = (0, $kB67t._)(empty[Math.floor(Math.random() * empty.length)], 2), r = _empty_Math_floor[0], c = _empty_Math_floor[1];\n                this.state[r][c] = Math.random() < 0.9 ? 2 : 4;\n            }\n        },\n        {\n            key: \"_transpose\",\n            value: function _transpose(state) {\n                return state[0].map(function(_, c) {\n                    return state.map(function(r) {\n                        return r[c];\n                    });\n                });\n            }\n        },\n        {\n            key: \"_reverseRows\",\n            value: function _reverseRows(state) {\n                return state.map(function(row) {\n                    return (0, $2Xzd1._)(row).reverse();\n                });\n            }\n        },\n        {\n            key: \"_mergeRow\",\n            value: function _mergeRow(row) {\n                var filtered = row.filter(Boolean);\n                var newRow = [];\n                var score = 0;\n                for(var i = 0; i < filtered.length; i++)if (filtered[i] === filtered[i + 1]) {\n                    var merged = filtered[i] * 2;\n                    newRow.push(merged);\n                    score += merged;\n                    i++;\n                } else newRow.push(filtered[i]);\n                while(newRow.length < 4)newRow.push(0);\n                return {\n                    row: newRow,\n                    score: score\n                };\n            }\n        },\n        {\n            key: \"_boardsEqual\",\n            value: function _boardsEqual(a, b) {\n                return a.flat().every(function(v, i) {\n                    return v === b.flat()[i];\n                });\n            }\n        },\n        {\n            key: \"_canMove\",\n            value: function _canMove() {\n                var state = this.state;\n                // Есть пустая клетка?\n                if (state.flat().includes(0)) return true;\n                // Есть одинаковые по горизонтали?\n                for(var r = 0; r < 4; r++)for(var c = 0; c < 3; c++){\n                    if (state[r][c] === state[r][c + 1]) return true;\n                }\n                // Есть одинаковые по вертикали?\n                for(var c1 = 0; c1 < 4; c1++)for(var r1 = 0; r1 < 3; r1++){\n                    if (state[r1][c1] === state[r1 + 1][c1]) return true;\n                }\n                return false;\n            }\n        },\n        {\n            // =====================\n            // 🔹 Основные методы API\n            // =====================\n            key: \"getState\",\n            value: function getState() {\n                return this._clone(this.state);\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                if (this.status === \"idle\") {\n                    this.state = this._clone(this.state);\n                    this.status = \"playing\";\n                    this._addRandomCell();\n                    this._addRandomCell();\n                    this.started = true;\n                }\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.state = this._clone(this.initialState);\n                this.score = 0;\n                this.status = \"idle\";\n                this.started = false;\n            }\n        },\n        {\n            key: \"_moveBase\",\n            value: function _moveBase(state, direction) {\n                var _this = this;\n                // direction: 'left' | 'right' | 'up' | 'down'\n                var newState = this._clone(state);\n                var totalScore = 0;\n                if (direction === \"up\" || direction === \"down\") newState = this._transpose(newState);\n                if (direction === \"right\" || direction === \"down\") newState = this._reverseRows(newState);\n                var moved = newState.map(function(row) {\n                    var _this__mergeRow = _this._mergeRow(row), newRow = _this__mergeRow.row, score = _this__mergeRow.score;\n                    totalScore += score;\n                    return newRow;\n                });\n                var result = moved;\n                if (direction === \"right\" || direction === \"down\") result = this._reverseRows(result);\n                if (direction === \"up\" || direction === \"down\") result = this._transpose(result);\n                return {\n                    result: result,\n                    totalScore: totalScore\n                };\n            }\n        },\n        {\n            key: \"_move\",\n            value: function _move(direction) {\n                if (!this.started || this.status !== \"playing\") return;\n                var _this__moveBase = this._moveBase(this.state, direction), result = _this__moveBase.result, totalScore = _this__moveBase.totalScore;\n                if (this._boardsEqual(this.state, result)) // Ничего не изменилось\n                return;\n                this.state = result;\n                this.score += totalScore;\n                if (this.state.flat().includes(2048)) {\n                    this.status = \"win\";\n                    return;\n                }\n                this._addRandomCell();\n                if (!this._canMove()) this.status = \"lose\";\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                this._move(\"left\");\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                this._move(\"right\");\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                this._move(\"up\");\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                this._move(\"down\");\n            }\n        }\n    ]);\n    return Game;\n}();\nmodule.exports = $3d28d7f1aac198f5$var$Game;\n\n});\nparcelRegister(\"bB0zn\", function(module, exports) {\n\n$parcel$export(module.exports, \"_\", function () { return $8713978b2328d32b$export$71511d61b312f219; });\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n});\n\nparcelRegister(\"6QEWP\", function(module, exports) {\n\n$parcel$export(module.exports, \"_\", function () { return $4fc75ccb937ab1df$export$71511d61b312f219; });\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n});\n\nparcelRegister(\"kB67t\", function(module, exports) {\n\n$parcel$export(module.exports, \"_\", function () { return $efec029548ccee7f$export$71511d61b312f219; });\n\nvar $Q9cvz = parcelRequire(\"Q9cvz\");\n\nvar $c4AWK = parcelRequire(\"c4AWK\");\n\nvar $dNApw = parcelRequire(\"dNApw\");\n\nvar $ihB7G = parcelRequire(\"ihB7G\");\nfunction $efec029548ccee7f$export$71511d61b312f219(arr, i) {\n    return (0, $Q9cvz._)(arr) || (0, $c4AWK._)(arr, i) || (0, $ihB7G._)(arr, i) || (0, $dNApw._)();\n}\n\n});\nparcelRegister(\"Q9cvz\", function(module, exports) {\n\n$parcel$export(module.exports, \"_\", function () { return $09cbfe85151ea6c6$export$71511d61b312f219; });\nfunction $09cbfe85151ea6c6$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n});\n\nparcelRegister(\"c4AWK\", function(module, exports) {\n\n$parcel$export(module.exports, \"_\", function () { return $8ca2848f896a6803$export$71511d61b312f219; });\nfunction $8ca2848f896a6803$export$71511d61b312f219(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n});\n\nparcelRegister(\"dNApw\", function(module, exports) {\n\n$parcel$export(module.exports, \"_\", function () { return $a0bc1859061deae1$export$71511d61b312f219; });\nfunction $a0bc1859061deae1$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n});\n\nparcelRegister(\"ihB7G\", function(module, exports) {\n\n$parcel$export(module.exports, \"_\", function () { return $d4f69c5c6c4654b1$export$71511d61b312f219; });\n\nvar $gNF1f = parcelRequire(\"gNF1f\");\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $gNF1f._)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $gNF1f._)(o, minLen);\n}\n\n});\nparcelRegister(\"gNF1f\", function(module, exports) {\n\n$parcel$export(module.exports, \"_\", function () { return $c3b10a83b523f372$export$71511d61b312f219; });\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n});\n\n\n\nparcelRegister(\"2Xzd1\", function(module, exports) {\n\n$parcel$export(module.exports, \"_\", function () { return $227c6742e0ff6f82$export$71511d61b312f219; });\n\nvar $gUOYc = parcelRequire(\"gUOYc\");\n\nvar $Q6yVl = parcelRequire(\"Q6yVl\");\n\nvar $4S8xA = parcelRequire(\"4S8xA\");\n\nvar $ihB7G = parcelRequire(\"ihB7G\");\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $gUOYc._)(arr) || (0, $Q6yVl._)(arr) || (0, $ihB7G._)(arr) || (0, $4S8xA._)();\n}\n\n});\nparcelRegister(\"gUOYc\", function(module, exports) {\n\n$parcel$export(module.exports, \"_\", function () { return $c50969dc1df61e8b$export$71511d61b312f219; });\n\nvar $gNF1f = parcelRequire(\"gNF1f\");\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $gNF1f._)(arr);\n}\n\n});\n\nparcelRegister(\"Q6yVl\", function(module, exports) {\n\n$parcel$export(module.exports, \"_\", function () { return $09c9f293d010c0e1$export$71511d61b312f219; });\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n});\n\nparcelRegister(\"4S8xA\", function(module, exports) {\n\n$parcel$export(module.exports, \"_\", function () { return $38c2d4931cb7a7c4$export$71511d61b312f219; });\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n});\n\n\n\n\nparcelRequire(\"5fy9m\");\n})();\n//# sourceMappingURL=index.8b19e866.js.map\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  constructor(initialState) {\n    this.initialState = initialState\n      ? initialState.map((r) => [...r])\n      : Array.from({ length: 4 }, () => Array(4).fill(0));\n\n    this.state = this._clone(this.initialState);\n    this.score = 0;\n    this.status = 'idle';\n    this.started = false;\n  }\n\n  // =====================\n  // 🔹 Вспомогательные методы\n  // =====================\n  _clone(state) {\n    return state.map((r) => [...r]);\n  }\n\n  _getEmptyCells() {\n    const empty = [];\n\n    for (let r = 0; r < 4; r++) {\n      for (let c = 0; c < 4; c++) {\n        if (this.state[r][c] === 0) {\n          empty.push([r, c]);\n        }\n      }\n    }\n\n    return empty;\n  }\n\n  _addRandomCell() {\n    const empty = this._getEmptyCells();\n\n    if (!empty.length) {\n      return;\n    }\n\n    const [r, c] = empty[Math.floor(Math.random() * empty.length)];\n\n    this.state[r][c] = Math.random() < 0.9 ? 2 : 4;\n  }\n\n  _transpose(state) {\n    return state[0].map((_, c) => state.map((r) => r[c]));\n  }\n\n  _reverseRows(state) {\n    return state.map((row) => [...row].reverse());\n  }\n\n  _mergeRow(row) {\n    const filtered = row.filter(Boolean);\n    const newRow = [];\n    let score = 0;\n\n    for (let i = 0; i < filtered.length; i++) {\n      if (filtered[i] === filtered[i + 1]) {\n        const merged = filtered[i] * 2;\n\n        newRow.push(merged);\n        score += merged;\n        i++;\n      } else {\n        newRow.push(filtered[i]);\n      }\n    }\n\n    while (newRow.length < 4) {\n      newRow.push(0);\n    }\n\n    return {\n      row: newRow, score,\n    };\n  }\n\n  _boardsEqual(a, b) {\n    return a.flat().every((v, i) => v === b.flat()[i]);\n  }\n\n  _canMove() {\n    const state = this.state;\n\n    // Есть пустая клетка?\n    if (state.flat().includes(0)) {\n      return true;\n    }\n\n    // Есть одинаковые по горизонтали?\n    for (let r = 0; r < 4; r++) {\n      for (let c = 0; c < 3; c++) {\n        if (state[r][c] === state[r][c + 1]) {\n          return true;\n        }\n      }\n    }\n\n    // Есть одинаковые по вертикали?\n    for (let c = 0; c < 4; c++) {\n      for (let r = 0; r < 3; r++) {\n        if (state[r][c] === state[r + 1][c]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  // =====================\n  // 🔹 Основные методы API\n  // =====================\n  getState() {\n    return this._clone(this.state);\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    if (this.status === 'idle') {\n      this.state = this._clone(this.state);\n      this.status = 'playing';\n      this._addRandomCell();\n      this._addRandomCell();\n      this.started = true;\n    }\n  }\n\n  restart() {\n    this.state = this._clone(this.initialState);\n    this.score = 0;\n    this.status = 'idle';\n    this.started = false;\n  }\n\n  _moveBase(state, direction) {\n    // direction: 'left' | 'right' | 'up' | 'down'\n    let newState = this._clone(state);\n    let totalScore = 0;\n\n    if (direction === 'up' || direction === 'down') {\n      newState = this._transpose(newState);\n    }\n\n    if (direction === 'right' || direction === 'down') {\n      newState = this._reverseRows(newState);\n    }\n\n    const moved = newState.map((row) => {\n      const { row: newRow, score } = this._mergeRow(row);\n\n      totalScore += score;\n\n      return newRow;\n    });\n\n    let result = moved;\n\n    if (direction === 'right' || direction === 'down') {\n      result = this._reverseRows(result);\n    }\n\n    if (direction === 'up' || direction === 'down') {\n      result = this._transpose(result);\n    }\n\n    return {\n      result, totalScore,\n    };\n  }\n\n  _move(direction) {\n    if (!this.started || this.status !== 'playing') {\n      return;\n    }\n\n    const { result, totalScore } = this._moveBase(this.state, direction);\n\n    if (this._boardsEqual(this.state, result)) {\n      // Ничего не изменилось\n      return;\n    }\n\n    this.state = result;\n    this.score += totalScore;\n\n    if (this.state.flat().includes(2048)) {\n      this.status = 'win';\n\n      return;\n    }\n\n    this._addRandomCell();\n\n    if (!this._canMove()) {\n      this.status = 'lose';\n    }\n  }\n\n  moveLeft() {\n    this._move('left');\n  }\n\n  moveRight() {\n    this._move('right');\n  }\n\n  moveUp() {\n    this._move('up');\n  }\n\n  moveDown() {\n    this._move('down');\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_with_holes } from \"./_array_with_holes.js\";\nimport { _ as _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _ as _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$bB0zn","$6QEWP","$kB67t","$2Xzd1","$3d28d7f1aac198f5$var$Game","Game","initialState","_","map","r","Array","from","length","fill","state","_clone","score","status","started","key","value","empty","c","push","_getEmptyCells","_empty_Math_floor","Math","floor","random","row","reverse","filtered","filter","Boolean","newRow","i","merged","a","b","flat","every","includes","c1","r1","_addRandomCell","direction","_this","newState","totalScore","_transpose","_reverseRows","result","_this__mergeRow","_mergeRow","_this__moveBase","_moveBase","_boardsEqual","_canMove","_move","$8713978b2328d32b$export$71511d61b312f219","instance","Constructor","TypeError","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","writable","$4fc75ccb937ab1df$export$71511d61b312f219","protoProps","staticProps","prototype","$efec029548ccee7f$export$71511d61b312f219","$Q9cvz","$c4AWK","$dNApw","$ihB7G","arr","$09cbfe85151ea6c6$export$71511d61b312f219","isArray","$8ca2848f896a6803$export$71511d61b312f219","_s","_e","_i","Symbol","iterator","_arr","_n","_d","next","done","$a0bc1859061deae1$export$71511d61b312f219","$d4f69c5c6c4654b1$export$71511d61b312f219","$gNF1f","o","minLen","toString","slice","constructor","name","test","$c3b10a83b523f372$export$71511d61b312f219","len","arr2","$227c6742e0ff6f82$export$71511d61b312f219","$gUOYc","$Q6yVl","$4S8xA","$c50969dc1df61e8b$export$71511d61b312f219","$09c9f293d010c0e1$export$71511d61b312f219","iter","$38c2d4931cb7a7c4$export$71511d61b312f219"],"version":3,"file":"index.8b19e866.js.map"}